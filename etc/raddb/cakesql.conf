sql cake_sql{

	# Указываем драйвер для PostgreSQL
	driver = "rlm_sql_postgresql"

	# указываем PostgreSQL сервер.
	server = "127.0.0.1"
	# указываем логин к базе.
	login = "cake"
	# пароль который вы задавали при заведении пользователя cake.
	password = "cake"
	
	# Указываем базу.
	radius_db = "cake"
		
	# Создавать файл трассировки для SQL рапросов.
	# Создается только при указании опции -x
	sqltrace = yes
	sqltracefile = /var/log/radius/sqltrace.sql

	# Количество подключений к СУБД
	num_sql_socks = 30

        # Имя пользователя запрашиваемого в СУБД.
	# Возможно применение регулярных выражений.	
	sql_user_name = "%{User-Name}"

        # запрос на авторизацию. Если запрос возвращает ничего RADIUS считает, что такого пользователя нет
	# и отдает Auth-Reject		
	authorize_check_query = "select * from cake.auth_check('%{SQL-User-Name}');"


        # после успешной авторизации выполняется этот запрос который возвращает reply аттрибуты для пользователя.
	# Они могут содержать лимиты для пользователя и сопутствующую информацию.
	authorize_reply_query = "select * from cake.auth_reply('%{SQL-User-Name}');"

	# запрос ведет запись alive пакетов сессии содержащих промежуточные значения использования ресурсов.
	accounting_update_query = "select cake.acct_update('%{Acct-Unique-Session-Id}', %{Acct-Output-Octets}, %{Acct-Input-Octets});"
	
	# запрос ведет запись пакета начала сессии.			   
	accounting_start_query = "insert into cake.session (sid, id_user) \
                                  values ('%{Acct-Unique-Session-Id}', cake.str2uid('%{SQL-User-Name}'));"

	 # запрос ведет запись пакета конца сессии.
	accounting_stop_query = "update cake.session set svolumeout=%{Acct-Input-Octets}, svolume=%{Acct-Output-Octets}, \
	                         s_end=current_timestamp where id=cake.str2sid('%{Acct-Unique-Session-Id}');"

}
