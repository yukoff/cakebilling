
# Различные файловые переменные.
# Приведено для gentoo.
# Если ставите из исходников,
# скопируйте эти переменные из 
# /opt/freeradius/etc/raddb/radiusd.conf 

prefix = /usr
exec_prefix = ${prefix}
sysconfdir = /etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = ${localstatedir}/log/radius
raddbdir = ${sysconfdir}/raddb
radacctdir = ${logdir}/radacct


# Месторасположение конфигурационных и лог файлов.
confdir = ${raddbdir}
run_dir = ${localstatedir}/run/radiusd

# Каталог с подгружаемыми модулями.
libdir = ${exec_prefix}/lib

# Месторасположение pid-файла. Содержащего идентификатор процесса.
pidfile = ${run_dir}/radiusd.pid

# Имя пользователя и группа от которых запускается FreeRADIUS
user = radiusd
group = radiusd

# Максимальное время (в секундах) используемое для обработки запроса.
max_request_time = 30

# Удалить запросы которые обрабатываются более чем max_request_time
delete_blocked_requests = no

# Время ожидания (в секундах) перед очисткой reply запроса отправленного NAS.
cleanup_delay = 5

# Максимальное количество запросов хранимых сервером. Это число должно быть равно количеству клиентов помноженному на 256.
# К примеру для четырех клиентов оно будет 1024.
max_requests = 5120


# Закрепить за ip адресом. По умолчанию RADIUS сервер при старте принимает запросы со всех ip адресов.
bind_address = *

# Закрепить за FreeRADIUS конкретный port. Если указан ноль, 
# то значение берется из /etc/services
port = 0

# Запретить/разрешить ip адреса в dns имена.
# Включение этой опции может сильно снизить производительность.
hostname_lookups = no

# Создавать/несоздавать отладочные файлы при падении сервера.
allow_core_dumps = no

#  Разрешить использование регулярных выражений.
regular_expressions     = yes
extended_expressions    = yes

# Записывать полный User-Name аттрибут если найден в запросе.
log_stripped_names = no

# Записывать в лог попытки авторизации.
log_auth = yes

#  Записывать в логи пароли при авторизации.
#  log_auth_badpass  - не корректные пароли
#  log_auth_goodpass - корректные пароли

log_auth_badpass = yes
log_auth_goodpass = no

# Включить/выключить коллизию пользователей.
usercollide = no

# конвертировать логин и/или пароль до или после авторизации.
lower_user = no
lower_pass = no

# удалить пробелы в логине и/или пароле.
nospace_user = no
nospace_pass = no

# настройки безопасности от возможных DoS аттак.
security {

        # Максимальное допустимое количество аттрибутов в RADIUS пакете.
        max_attributes = 200
		
        # Задержка (в секундах) перед отправкой Access-Reject пакета.
        reject_delay = 1
				
        # Не отвечать на запросы Status-Server 
        status_server = no
	
}

# Конфигрурация клиентов RADIUS сервера.
# Описывается в отдельном файле. 
$INCLUDE  ${confdir}/clients.conf
					
# Отключить snmp поддержку.
snmp=no
						
# Настрока пула процессов.
						
thread pool {
						
    # количество первоначально запущенных процессов.
    start_servers = 5
					
    #  Максимально возможное количество процессов.
    max_servers = 32
										
    # Динамическая регулировка количества процессов. 
    min_spare_servers = 3
    max_spare_servers = 10
										
    # Количество принимаемых запросов процессом. МОжет помочь при утечках памяти в 
    # RADIUS сервере. Если выставить 300, процессы будут периодически перегружаться 
    # для уборки мусора.
    max_requests_per_server = 0
						
}
								
# Секция конфигурации динамических модулей.
			
modules {
	
    # Модуль PAP авторизации. 
    # Необходим для обработки запросов с PAP авторизацией.
    # encryption_scheme указывает в каком виде хранятся пароли.
    # clear - подразумевает в открытом виде.
    pap {
        encryption_scheme = clear
    }
																									
    # Модуль CHAP авторизации.
    # Необходим для обработки запросов с CHAP авторизацией.
    # authtype подразумевает обработку запросов только с аттрибутом Auth-Type=CHAP
    chap {
        authtype = CHAP
    }

    # Модуль преобработки запросов.
    # Т.е. перед авторизацией пакета.
    preprocess {
        # huntgroups - хинт группы см. файл huntgoups.
        # hints - хинты.
	huntgroups = ${confdir}/huntgroups
        hints = ${confdir}/hints
	
	# Обработка Cisco VSA.
        with_cisco_vsa_hack = no
    }

    # Модуль Microsoft CHAP авторизации.
    # Поддерживает так же еще и Microsoft CHAP v2 
    # authtype подразумевает обработку запросов только с аттрибутом Auth-Type=MS-CHAP
    # use_mppe = no указывает на отсутствие компресии VPN туннеля.
    mschap {
	authtype = MS-CHAP
	use_mppe = no
    }

    # Модуль записей Livingston RADIUS типа.
    # usersfile содержит авторизационные записи пользователей.
    # Рекомендуется использовать только для тестов и выставления значений по умолчанию.
    # acctusersfile содержит пользователей подлежащих учету (аккаунтингу).
    # compat - совместимость.  При использовании файлов только FreeRADIUS можно отключить.
    files {        
        usersfile = ${confdir}/users
        compat = no
    }

    # Запись детального лога аккаунтинговых пакетов.
    detail {
        detailfile = ${radacctdir}/%{Client-IP-Address}/detail-%Y%m%d
        detailperm = 0600
    }

    # Запись детального лога пакетов авторизации.
    detail auth_log {
        detailfile = ${radacctdir}/%{Client-IP-Address}/auth-detail-%Y%m%d
        detailperm = 0600
    }

    # Запись детального лога reply пакетов.
    detail reply_log {
        detailfile = ${radacctdir}/%{Client-IP-Address}/reply-detail-%Y%m%d
        detailperm = 0600
    }

    # Создать уникальный ключ для аккаунтинг сессии.
    # Многие NAS повторно используют  Acct-Session-ID. 
    # key перечисление аттрибутов для генерации Acct-Session-ID
    acct_unique {
            key = "User-Name, Acct-Session-Id, NAS-IP-Address, Client-IP-Address, NAS-Port-Id"
    }

    #  Конфигурация авторизации и аккаунтинга посредством СУБД
    #  содержится в отдельном файле cakesql.conf
    $INCLUDE  ${confdir}/cakesql.conf
    
}
	
# Авторизация 
# сначала идет пакет передается в preprocess
# где может быть модифицирован.
# Далее chap mschap обрабатывают chap и mschap авторизацию.
authorize {
    preprocess
    chap
    mschap
    # Не ведем логи пакетов авторизации.
    # auth_log
    files
    cake_sql
}

# Аунтификация
# Секция содержит модули доступные, для аунтификации.
authenticate {
	Auth-Type PAP {
		pap
	}

	Auth-Type CHAP {
		chap
	}

	Auth-Type MS-CHAP {
		mschap
	}

}


# Преобразование аккаунтинговых пакетов.
preacct {
    preprocess
}
																																																																																																																						     
																																																																																																																						     
#  Секция ведения аккаунтинга.
accounting {
    # Создание Acct-Session-Id если ваш NAS генрит их вполне корректно можете убрать.
    acct_unique

    # Не создаем detail лог.
    # detail
    
    # Помещать аккаунтинговые пакеты в СУБД
    cake_sql
}

# Секция ведения логов reply-пакетов.
post-auth {
    # Не ведем детальный лог репли пакетов.
    # reply_log
}